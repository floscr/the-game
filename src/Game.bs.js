// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Cards$ReasonmlTheGame = require("./Cards.bs.js");
var Utils$ReasonmlTheGame = require("./Utils.bs.js");
var Players$ReasonmlTheGame = require("./Players.bs.js");

function init() {
  return /* record */[
          /* players : :: */[
            /* record */[
              /* id */0,
              /* name */Caml_array.caml_array_get(Players$ReasonmlTheGame.player_names, 0),
              /* hand : [] */0
            ],
            /* :: */[
              /* record */[
                /* id */1,
                /* name */Caml_array.caml_array_get(Players$ReasonmlTheGame.player_names, 1),
                /* hand : [] */0
              ],
              /* [] */0
            ]
          ],
          /* deck */Cards$ReasonmlTheGame.initDeck(/* () */0),
          /* stacks : tuple */[
            /* Upwards */Block.__(0, [/* [] */0]),
            /* Upwards */Block.__(0, [/* [] */0]),
            /* Downwards */Block.__(1, [/* [] */0]),
            /* Downwards */Block.__(1, [/* [] */0])
          ]
        ];
}

function draw(amount, id, state) {
  var match = Cards$ReasonmlTheGame.draw(amount, state[/* deck */1]);
  var drawnCards = match[0];
  return /* record */[
          /* players */Utils$ReasonmlTheGame.mapMatching((function (x) {
                  return x[/* id */0] === id;
                }), (function (param) {
                  return Players$ReasonmlTheGame.gainCards(drawnCards, param);
                }), state[/* players */0], /* [] */0),
          /* deck */match[1],
          /* stacks */state[/* stacks */2]
        ];
}

function tapHand(param) {
  return Utils$ReasonmlTheGame.tap((function (x) {
                console.log($$Array.of_list(List.nth(x[/* players */0], 0)[/* hand */2]));
                return /* () */0;
              }), param);
}

tapHand(draw(5, 0, tapHand(draw(3, 0, tapHand(init(/* () */0))))));

exports.init = init;
exports.draw = draw;
exports.tapHand = tapHand;
/*  Not a pure module */
